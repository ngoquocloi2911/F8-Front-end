* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
    font-size: 14px;
    font-family: Arial, Helvetica, sans-serif;
}

body {
    background-color: #ccc;
}

/* Navbar */
.nav {
    min-height: 42px;
    background-color: #EF5122;
    /* Thẻ chứa giúp các thẻ con theo chiều ngang */
    display: flex;
    /* Đẩy 2 thẻ con ra sát 2 bên  căn đều ở giữa*/
    justify-content: space-between;
}

.nav-list {
    padding-left: 0;
    margin: auto 16px;
    
}

.nav-item {
    color: #fff;
    list-style: none;
    margin: 0 8px;
    display: inline-block;
}

/* Form layout */
.form-container {
    max-width: 720px;
    padding: 32px;
    margin: 36px auto 0 auto;
    background-color: #fff;
}

.form__row {
    padding: 8px 0;
    /* Thẻ chứa  giúp các thẻ con theo chiều ngang  */
    display: flex;
}

.form__label {

    /* Chiều dài nhỏ nhất */
    min-width: 90px;
}

.form__input {

    /* tự căn chỉnh sao cho chiều dài còn lại tối da */
    flex: 1;
}

/* Column layout */
.column-layout {
    margin-top: 36px;
    padding: 12px 0;
    background-color: #fff;
    display: flex;
    flex-direction: column;

}

.column-item {
    padding: 0 16px;
    /* cho tất cả các thằng có kích thước bằng nhau
    flex: 1; */
}

.sidebar-one {
    /* tự động căn chỉnh phần sidebar- bằng 1 so với các phần còn lại */
    flex: 1;
    /* Điều chỉnh vị trí của các cột theo thứ tứ nêu dưới */
    order: 2;
}

.sidebar-two {
 /* tự động căn chỉnh phần sidebar- bằng 1 so với các phần còn lại */
    flex: 1;
    /* Điều chỉnh vị trí của các cột theo thứ tứ nêu dưới */
    order: 3;
}

.main-column {
     /* tự động căn chỉnh phần sidebar- bằng 3 so với các phần còn lại */
    flex: 3;
    /* Điều chỉnh vị trí của các cột theo thứ tứ nêu dưới */
    order: 1;
}

/* Feature layout */
.feature-layout {
    margin-top: 36px;
    /* Khối cha flex làm cho các khối con theo chiều ngang */
    display: flex;
    /* Căn đều ở 2 đầu có khoảng trắng , và căn đều ở giữa */
    justify-content: space-around;
    /* giá trị mặc định là row  nhưng mình chuyển nó thành colum--  */
    flex-direction: column;
    
}

/* PC, Tablet */
@media (min-width: 740px) {
    .feature-layout {
        /* set nó lại thành giá trị mặc định */
        flex-direction: row;
    }
    .column-layout {
        /* set nó lại thành giá trị mặc định theo hàng */
        flex-direction: row;
    }
}

.feature-item {
    padding: 12px 16px;
    margin-top: 16px;
    /* Tạo khoảng hở kích thước theo chiều ngang */
    flex-basis: 30%;
}

.feature-item:nth-child(1) {
    background-color: rgb(192, 227, 222);
}

.feature-item:nth-child(2) {
    background-color: rgb(227, 200, 192);
}

.feature-item:nth-child(3) {
    background-color: rgb(226, 192, 227);
}

/* Wrap layout */
.wrap-layout {
    background-color: #fff;
    margin-top: 36px;
    padding: 12px 0 32px 0;
    /* Khối chứa làm cho các khối con theo chiều ngang */
    display: flex;

    /* Tạo khoảng hở giữa các khối là đều nhau */
    justify-content: space-evenly;

    /* Khi co lại sẽ tự động xuống hàng (lên trên) -- wrap là xuống dưới
    Thay đổi chiều của cross axis */
    flex-wrap: wrap-reverse;
}

.wrap-layout__item {
    width: 148px;
    height: 90px;
    color: #fff;
    text-align: center;
    line-height: 90px;
    font-size: 48px;
    font-weight: 700;
    margin-top: 20px;
    background-color: #EF5122;
}

/* Center layout */
.center-layout {
    background-color: rgb(192, 227, 194);
    margin: 36px auto 0 auto;
    padding: 32px 0;
    max-width: 640px;
    height: 360px;
    /* Sử dụng thuộc tính flex ở khối chứa */
    display: flex;
}

.center-layout__item {
    font-size: 42px;
    font-weight: 700;
    /* margin là auto tự động căn nội dung chính giữa */
    margin: auto;
}

/* Chart layout */
.chart-layout {
    margin: 36px auto 0 auto;
    padding: 32px 0;
    height: 320px;
    background-color: #fff;
    /* Thuộc tính cha chứa nó -- cho nó thành  */
    display: flex;
    /* Thuộc tính căn đều các thẻ con chứa trong */
    justify-content: space-around;
    /* Thuộc tính đảo chiều cross axis -- mặc định là theo chiều dọc */
    align-items: self-end;
}

.chart-layout__item {
    width: 60px;
    color: #fff;
    text-align: center;
    height: var(--percent);
    background-color: #EF5122;
    /* Hiệu ứng động cho từng chart-layout
     thuộc tính tên biến (growth), kiểu chuyển động(ease-in) 
     thời gian chuyển động(0.5s) */
    animation: growth ease-in 0.5s;
    /* dùng css cho thẻ con chứa nó --
    -- thuộc tính đảo chiều cross axis -- mặc định theo chiều dọc
    align-self: flex-end; */
}

@keyframes growth {
    from{
        /* Độ trong suốt từ 0.6 */
        opacity: 0.6;
        /* Chiều cao mặc định - đi 50% */
        height: calc(var(--percent) -50%);

    }
    to{
        /* Đến 1 */
        opacity: 1;
        /* Đến chiều cao mặc định */
        height: calc(var(--percent));

    }
    
}

/* End */
.the-end {
    margin: 12px auto 48px auto;
    padding: 32px 0;
    max-width: 740px;
    min-height: 360px;
    display: flex;
    /* Đảo chiều vị trí 2 cột lớn cho nhau 
    giá trị row là mặc định
    đảo thứ tự hàng lại với nhau*/
    flex-direction: row-reverse;
}

.the-end__first {
    padding: 4px 16px;
    background-color: #fff;
    flex: 1;
    
}

.the-end__second {
    flex: 1;
    display: flex;
    /* Giữ nguyên */
    /* flex-direction: column; */
    /* đảo chiều 2 cột cho nhau */
    flex-direction: column-reverse;
}

.the-end__second-one {
    padding: 4px 16px;
    background-color: rgb(227, 192, 214);
    flex: 1;
}

.the-end__second-two {
    padding: 4px 16px;
    background-color: rgb(192, 210, 227);
    flex: 1;
}

/*  cú pháp viết tắt
    flex:1
    
    flex-grow :1
    flex-sprink
    flex-basic
    
    
    flex-flow: row wrap
    
    flex-direction : row
    
    flex-wrap : wrap*/
